note *
note * This build file is in the Make Abstract Machine (MAM) language. It was
note * first generated by nmake, but in the ksh 93u+m distribution we maintain
note * it manually because nmake had too many problems to keep using. The
note * Mamfiles are processed by mamake (src/cmd/INIT/mamake.c); we added
note * indentation to improve readability. The language is documented in
note * src/cmd/INIT/README-mamake.md.
note *
setv INSTALLROOT ../../..
setv PACKAGE_ast_INCLUDE ${INSTALLROOT}/include/ast
setv PACKAGEROOT ../../../../..
setv AR ${mam_cc_AR} ${mam_cc_AR_ARFLAGS}
setv CC cc
setv mam_cc_FLAGS ${mam_cc_PIC}
setv CCFLAGS ${-debug-symbols?1?${mam_cc_DEBUG} -D_BLD_DEBUG?${mam_cc_OPTIMIZE}?}
setv COTEMP $$
setv IFFEFLAGS
setv LDFLAGS
make install
	make sum
		make libsum.a archive
			make sum.req
				exec - set -
				exec - echo 'int main(){return 0;}' > 1.${COTEMP}.c
				exec - ${CC} ${mam_cc_FLAGS} ${CCFLAGS} -c 1.${COTEMP}.c &&
				exec - x=`${CC} ${mam_cc_FLAGS} ${CCFLAGS} ${LDFLAGS} -o 1.${COTEMP}.x 1.${COTEMP}.o -l'*' 2>&1 | sed -e 's/[][()+@?]/#/g' || :` &&
				exec - {
				exec - case "" in
				exec - *?) echo " " ;;
				exec - esac
				exec - for i in sum md ast
				exec - do case $i in
				exec - "sum"|sum)
				exec - ;;
				exec - *) if test -f ${INSTALLROOT}/lib/lib/$i
				exec - then y=`cat ${INSTALLROOT}/lib/lib/$i`
				exec - case $y in
				exec - *-?*) echo "" $y ;;
				exec - esac
				exec - continue
				exec - elif test ! -f ${INSTALLROOT}/lib/lib$i.a
				exec - then case `{ ${CC} ${mam_cc_FLAGS} ${CCFLAGS} -L${INSTALLROOT}/lib ${LDFLAGS} -o 1.${COTEMP}.x 1.${COTEMP}.o -l$i 2>&1 || echo '' "$x" ;} | sed -e 's/[][()+@?]/#/g' || :` in
				exec - *$x*) case `{ ${CC} ${mam_cc_FLAGS} ${CCFLAGS} ${LDFLAGS} -o 1.${COTEMP}.x 1.${COTEMP}.o -l$i 2>&1 || echo '' "$x" ;} | sed -e 's/[][()+@?]/#/g' || :` in
				exec - *$x*) continue ;;
				exec - esac
				exec - ;;
				exec - esac
				exec - fi
				exec - ;;
				exec - esac
				exec - echo " -l$i"
				exec - done
				exec - } > sum.req
				exec - rm -f 1.${COTEMP}.*
			done sum.req generated
			make sumlib.o
				make sumlib.c
					make sum-sha2.c implicit
						make ${PACKAGE_ast_INCLUDE}/endian.h implicit
							make ${PACKAGE_ast_INCLUDE}/bytesex.h implicit
								make ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
									make ${PACKAGE_ast_INCLUDE}/ast_map.h implicit
									done ${PACKAGE_ast_INCLUDE}/ast_map.h dontcare
									prev ${PACKAGE_ast_INCLUDE}/endian.h implicit
								done ${PACKAGE_ast_INCLUDE}/ast_common.h dontcare
							done ${PACKAGE_ast_INCLUDE}/bytesex.h dontcare
						done ${PACKAGE_ast_INCLUDE}/endian.h dontcare
					done sum-sha2.c dontcare
					make sum-sha1.c implicit
					done sum-sha1.c dontcare
					make sum-md5.c implicit
					done sum-md5.c dontcare
					make sum-lmd.c implicit
						make sha2.h implicit
						done sha2.h dontcare virtual
						make sha1.h implicit
						done sha1.h dontcare virtual
						make md5.h implicit
						done md5.h dontcare virtual
						make md4.h implicit
						done md4.h dontcare virtual
					done sum-lmd.c dontcare
					make sum-prng.c implicit
						make ${PACKAGE_ast_INCLUDE}/fnv.h implicit
							prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
						done ${PACKAGE_ast_INCLUDE}/fnv.h
					done sum-prng.c
					make sum-bsd.c implicit
					done sum-bsd.c
					make sum-ast4.c implicit
					done sum-ast4.c
					make FEATURE/sum implicit
						make features/sum
						done features/sum
						bind -last
						exec - iffe ${IFFEFLAGS} -v -c "${CC} ${mam_cc_FLAGS} ${CCFLAGS} ${LDFLAGS}" ref ${mam_cc_L+-L${INSTALLROOT}/lib} -I${PACKAGE_ast_INCLUDE} -I${INSTALLROOT}/include ${mam_libast} : run features/sum
					done FEATURE/sum generated
					make ${PACKAGE_ast_INCLUDE}/hashpart.h implicit
					done ${PACKAGE_ast_INCLUDE}/hashpart.h
					make ${PACKAGE_ast_INCLUDE}/swap.h implicit
						prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
					done ${PACKAGE_ast_INCLUDE}/swap.h
					prev ${PACKAGE_ast_INCLUDE}/endian.h implicit
					make sum.h implicit
						make ${PACKAGE_ast_INCLUDE}/ast.h implicit
							make ${PACKAGE_ast_INCLUDE}/ast_api.h implicit
							done ${PACKAGE_ast_INCLUDE}/ast_api.h dontcare
							make ${PACKAGE_ast_INCLUDE}/vmalloc.h implicit
								prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
								make ${PACKAGE_ast_INCLUDE}/ast_std.h implicit
									make ${PACKAGE_ast_INCLUDE}/regex.h implicit
										prev ${PACKAGE_ast_INCLUDE}/ast_api.h implicit
										make ${PACKAGE_ast_INCLUDE}/ast_wchar.h implicit
											make ${PACKAGE_ast_INCLUDE}/wctype.h implicit
												make ${PACKAGE_ast_INCLUDE}/ast_wctype.h implicit
													prev ${PACKAGE_ast_INCLUDE}/endian.h implicit
													make ${PACKAGE_ast_INCLUDE}/wchar.h implicit
														prev ${PACKAGE_ast_INCLUDE}/ast_wchar.h implicit
													done ${PACKAGE_ast_INCLUDE}/wchar.h dontcare
												done ${PACKAGE_ast_INCLUDE}/ast_wctype.h dontcare
											done ${PACKAGE_ast_INCLUDE}/wctype.h dontcare
											make ${PACKAGE_ast_INCLUDE}/stdio.h implicit
												make ${PACKAGE_ast_INCLUDE}/ast_stdio.h implicit
													make ${PACKAGE_ast_INCLUDE}/sfio_s.h implicit
													done ${PACKAGE_ast_INCLUDE}/sfio_s.h dontcare
													prev ${PACKAGE_ast_INCLUDE}/ast_std.h implicit
												done ${PACKAGE_ast_INCLUDE}/ast_stdio.h dontcare
											done ${PACKAGE_ast_INCLUDE}/stdio.h dontcare
											prev ${PACKAGE_ast_INCLUDE}/stdio.h implicit
											prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
										done ${PACKAGE_ast_INCLUDE}/ast_wchar.h dontcare
										prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
									done ${PACKAGE_ast_INCLUDE}/regex.h dontcare
									make ${PACKAGE_ast_INCLUDE}/getopt.h implicit
										make ${PACKAGE_ast_INCLUDE}/ast_getopt.h implicit
										done ${PACKAGE_ast_INCLUDE}/ast_getopt.h dontcare
									done ${PACKAGE_ast_INCLUDE}/getopt.h dontcare
									prev ${PACKAGE_ast_INCLUDE}/ast_map.h implicit
									make ${PACKAGE_ast_INCLUDE}/ast_botch.h implicit
									done ${PACKAGE_ast_INCLUDE}/ast_botch.h dontcare
									make ${PACKAGE_ast_INCLUDE}/ast_limits.h implicit
									done ${PACKAGE_ast_INCLUDE}/ast_limits.h dontcare
									make ${PACKAGE_ast_INCLUDE}/ast_fcntl.h implicit
										make ${PACKAGE_ast_INCLUDE}/ast_fs.h implicit
										done ${PACKAGE_ast_INCLUDE}/ast_fs.h dontcare
									done ${PACKAGE_ast_INCLUDE}/ast_fcntl.h dontcare
									prev ${PACKAGE_ast_INCLUDE}/ast_getopt.h implicit
									make ${PACKAGE_ast_INCLUDE}/ast_sys.h implicit
										prev ${PACKAGE_ast_INCLUDE}/getopt.h implicit
										prev ${PACKAGE_ast_INCLUDE}/endian.h implicit
										prev ${PACKAGE_ast_INCLUDE}/endian.h implicit
									done ${PACKAGE_ast_INCLUDE}/ast_sys.h dontcare
									make ${PACKAGE_ast_INCLUDE}/ast_lib.h implicit
									done ${PACKAGE_ast_INCLUDE}/ast_lib.h dontcare
									prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
								done ${PACKAGE_ast_INCLUDE}/ast_std.h dontcare
							done ${PACKAGE_ast_INCLUDE}/vmalloc.h dontcare
							make ${PACKAGE_ast_INCLUDE}/sfio.h implicit
								prev ${PACKAGE_ast_INCLUDE}/sfio_s.h implicit
								prev ${PACKAGE_ast_INCLUDE}/ast_common.h implicit
								prev ${PACKAGE_ast_INCLUDE}/ast_std.h implicit
							done ${PACKAGE_ast_INCLUDE}/sfio.h dontcare
							prev ${PACKAGE_ast_INCLUDE}/ast_std.h implicit
						done ${PACKAGE_ast_INCLUDE}/ast.h dontcare
					done sum.h
					make sum-att.c implicit
						prev ${PACKAGE_ast_INCLUDE}/ast.h implicit
					done sum-att.c
					make sum-crc.c implicit
						prev ${PACKAGE_ast_INCLUDE}/ast.h implicit
					done sum-crc.c
				done sumlib.c
				prev sumlib.c
				exec - ${CC} ${mam_cc_FLAGS} ${CCFLAGS} -I. -I${PACKAGE_ast_INCLUDE} -D_PACKAGE_ast -c sumlib.c
			done sumlib.o generated
			exec - ${AR} rc libsum.a sumlib.o
			exec - (ranlib libsum.a) >/dev/null 2>&1 || true
		done libsum.a generated
	done sum virtual
	prev libsum.a archive
	make ${INSTALLROOT}/lib
		exec - if silent test ! -d ${INSTALLROOT}/lib
		exec - then mkdir -p ${INSTALLROOT}/lib
		exec - fi
	done ${INSTALLROOT}/lib generated
	make ${INSTALLROOT}/lib/libsum.a archive
		prev ${INSTALLROOT}/lib
		prev libsum.a archive
		exec - ${STDCMP} 2>/dev/null -s libsum.a ${INSTALLROOT}/lib/libsum.a || { ${STDMV} ${INSTALLROOT}/lib/libsum.a ${INSTALLROOT}/lib/libsum.a.old 2>/dev/null || true; ${STDCP} libsum.a ${INSTALLROOT}/lib/libsum.a ;}
		exec - (ranlib ${INSTALLROOT}/lib/libsum.a) >/dev/null 2>&1 || true
	done ${INSTALLROOT}/lib/libsum.a generated
	make ${INSTALLROOT}/lib/lib
		exec - if silent test ! -d ${INSTALLROOT}/lib/lib
		exec - then mkdir -p ${INSTALLROOT}/lib/lib
		exec - fi
	done ${INSTALLROOT}/lib/lib generated
	make ${INSTALLROOT}/lib/lib/sum
		prev ${INSTALLROOT}/lib/lib
		prev sum.req
		exec - ${STDCMP} 2>/dev/null -s sum.req ${INSTALLROOT}/lib/lib/sum || { ${STDMV} ${INSTALLROOT}/lib/lib/sum ${INSTALLROOT}/lib/lib/sum.old 2>/dev/null || true; ${STDCP} sum.req ${INSTALLROOT}/lib/lib/sum ;}
	done ${INSTALLROOT}/lib/lib/sum generated
	make ${PACKAGE_ast_INCLUDE}
		exec - if silent test ! -d ${PACKAGE_ast_INCLUDE}
		exec - then mkdir -p ${PACKAGE_ast_INCLUDE}
		exec - fi
	done ${PACKAGE_ast_INCLUDE} generated
	make ${PACKAGE_ast_INCLUDE}/sum.h
		prev ${PACKAGE_ast_INCLUDE}
		prev sum.h
		exec - if ! cmp -s sum.h ${PACKAGE_ast_INCLUDE}/sum.h
		exec - then ${STDCP} sum.h ${PACKAGE_ast_INCLUDE}/sum.h
		exec - fi
	done ${PACKAGE_ast_INCLUDE}/sum.h generated
done install virtual
make test
done test dontcare virtual
