/*
 * CDE - Common Desktop Environment
 *
 * Copyright (c) 1993-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these libraries and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
 */
/* $XConsortium: externC.h /main/3 1995/11/06 17:12:49 rswiston $ */
#ifdef	__cplusplus
extern "C" {
#endif
/*
 * File: messageProps_ui.h
 * Contains: Declarations of module objects, user create procedures,
 *           and callbacks.
 *
 * This file was generated by dtcodegen, from module messageProps
 *
 *    ** DO NOT MODIFY BY HAND - ALL MODIFICATIONS WILL BE LOST **
 */
#ifndef _MESSAGEPROPS_UI_H_
#define _MESSAGEPROPS_UI_H_

#include <stdlib.h>
#include <X11/Intrinsic.h>
#include "dtb_utils.h"

/*
 * User Interface Objects
 */
/*
 * Shared data structures
 */
typedef struct {
    Widget	Arg_0_item;
    Widget	Arg_1_item;
    Widget	Arg_2_item;
    Widget	Arg_3_item;
    Widget	Arg_4_item;
    Widget	Arg_5_item;
    Widget	Arg_6_item;
    Widget	Arg_7_item;
    Widget	Arg_8_item;
    Widget	Arg_9_item;
    Widget	Arg_10_item;
    Widget	Arg_11_item;
    Widget	Arg_12_item;
    Widget	Arg_13_item;
    Widget	Arg_14_item;
    Widget	Arg_15_item;
    Widget	Arg_15_item2;
} MessagePropsSetArgButtonMenuItemsRec, *MessagePropsSetArgButtonMenuItems;
typedef struct {
    Widget	Otype_item;
    Widget	Object_item;
    Widget	Status_String_item;
    Widget	Handler_Ptype_item;
    Widget	Sender_Ptype_item;
} MessagePropsMsgSetAttributeButtonMenuItemsRec, *MessagePropsMsgSetAttributeButtonMenuItems;
typedef struct {
    Widget	Print_item;
    Widget	Send_item;
    Widget	Send_On_Exit_item;
    Widget	Accept_item;
    Widget	Desktop_Accept_item;
    Widget	Reject_item;
    Widget	Subcontract_Manage_item;
    Widget	Reply_item;
    Widget	Fail_item;
    Widget	Destroy_item;
} MessagePropsTtCButtonMenuItemsRec, *MessagePropsTtCButtonMenuItems;
typedef struct {
    Widget	Tt_message_item;
    Widget	Tt_pattern_item;
    Widget	C_item;
    Widget	Signature_item;
    Widget	Action_item;
    Widget	Status_notice_item;
} MessagePropsGenerateButtonMenuItemsRec, *MessagePropsGenerateButtonMenuItems;
typedef struct {
    Widget	ttdt_message_accept_item;
    Widget	ttdt_subcontract_manage_item;
} MessagePropsTttkButtonMenuItemsRec, *MessagePropsTttkButtonMenuItems;


typedef struct {
    Widget	UNDEFINED_item;
    Widget	NOTICE_item;
    Widget	REQUEST_item;
    Widget	OFFER_item;
} MessagePropsClassChoiceItemsRec, *MessagePropsClassChoiceItems;
typedef struct {
    Widget	PROCEDURE_item;
    Widget	OBJECT_item;
    Widget	HANDLER_item;
    Widget	OTYPE_item;
    Widget	ADDRESS_LAST_item;
} MessagePropsAddressChoiceItemsRec, *MessagePropsAddressChoiceItems;
typedef struct {
    Widget	SCOPE_NONE_item;
    Widget	SESSION_item;
    Widget	FILE_item;
    Widget	BOTH_item;
    Widget	FILE_IN_SESSION_item;
} MessagePropsScopeChoiceItemsRec, *MessagePropsScopeChoiceItems;
typedef struct {
    Widget	DISCARD_item;
    Widget	QUEUE_item;
    Widget	START_item;
    Widget	QUEUE_START_item;
} MessagePropsDispositionChoiceItemsRec, *MessagePropsDispositionChoiceItems;
typedef struct {
    Widget	UNDEFINED_item;
    Widget	NOTICE_item;
    Widget	REQUEST_item;
    Widget	OFFER_item;
} MessagePropsClassChoiceMenuItemsRec, *MessagePropsClassChoiceMenuItems;
typedef struct {
    Widget	PROCEDURE_item;
    Widget	OBJECT_item;
    Widget	HANDLER_item;
    Widget	OTYPE_item;
    Widget	ADDRESS_LAST_item;
} MessagePropsAddressChoiceMenuItemsRec, *MessagePropsAddressChoiceMenuItems;
typedef struct {
    Widget	SCOPE_NONE_item;
    Widget	SESSION_item;
    Widget	FILE_item;
    Widget	BOTH_item;
    Widget	FILE_IN_SESSION_item;
} MessagePropsScopeChoiceMenuItemsRec, *MessagePropsScopeChoiceMenuItems;
typedef struct {
    Widget	DISCARD_item;
    Widget	QUEUE_item;
    Widget	START_item;
    Widget	QUEUE_START_item;
} MessagePropsDispositionChoiceMenuItemsRec, *MessagePropsDispositionChoiceMenuItems;
typedef struct
{
    Boolean	initialized;
    
    Widget	messageProps;	/* object "messageProps" */
    Widget	messageProps_shellform;
    Widget	messageProps_panedwin;
    Widget	messageProps_form;
    
    Widget	messageActionPane;
    Widget	messageProps_footer;
    
    Widget	messagePane_frame;	/* object "messagePane" */
    Widget	messagePane;
    
    Widget	messageMenuPane;
    
    Widget	classChoice_rowcolumn;	/* object "classChoice" */
    Widget	classChoice_menu;
    Widget	classChoice_label;
    Widget	classChoice;
    MessagePropsClassChoiceItemsRec	classChoice_items;
    
    Widget	opText;
    
    Widget	addressChoice_rowcolumn;	/* object "addressChoice" */
    Widget	addressChoice_menu;
    Widget	addressChoice_label;
    Widget	addressChoice;
    MessagePropsAddressChoiceItemsRec	addressChoice_items;
    
    Widget	handlerText;
    
    Widget	scopeChoice_rowcolumn;	/* object "scopeChoice" */
    Widget	scopeChoice_menu;
    Widget	scopeChoice_label;
    Widget	scopeChoice;
    MessagePropsScopeChoiceItemsRec	scopeChoice_items;
    
    Widget	sessionText;
    Widget	fileText;
    Widget	fileButton;
    
    Widget	statusBox_rowcolumn;	/* object "statusBox" */
    Widget	statusBox_label;
    Widget	statusBox;
    
    Widget	separator;
    Widget	addArgButton;
    Widget	setArgButton;
    Widget	setContextButton;
    Widget	statusLabel;
    Widget	sessionButton;
    
    Widget	messageText_scrolledwin;	/* object "messageText" */
    Widget	messageText;
    
    Widget	handlerButton;
    Widget	msgPatternButton;
    Widget	msgCallbackAddButton;
    
    Widget	dispositionChoice_rowcolumn;	/* object "dispositionChoice" */
    Widget	dispositionChoice_menu;
    Widget	dispositionChoice_label;
    Widget	dispositionChoice;
    MessagePropsDispositionChoiceItemsRec	dispositionChoice_items;
    
    Widget	msgSetAttributeButton;
    Widget	opButton;
    
    Widget	setArgButton_setArgButton_menu;	/* object "setArgButton_menu" */
    MessagePropsSetArgButtonMenuItemsRec	setArgButton_setArgButton_menu_items;
    
    
    Widget	msgSetAttributeButton_msgSetAttributeButton_menu;	/* object "msgSetAttributeButton_menu" */
    MessagePropsMsgSetAttributeButtonMenuItemsRec	msgSetAttributeButton_msgSetAttributeButton_menu_items;
    
    Widget	tt_cButton;
    Widget	generateButton;
    
    Widget	tt_cButton_tt_cButton_menu;	/* object "tt_cButton_menu" */
    MessagePropsTtCButtonMenuItemsRec	tt_cButton_tt_cButton_menu_items;
    
    Widget	generateButton_generateButton_menu;	/* object "generateButton_menu" */
    MessagePropsGenerateButtonMenuItemsRec	generateButton_generateButton_menu_items;
    
    Widget	msgCloseButton;
    Widget	msgHelpButton;
    Widget	messageFooterLabel;
} DtbMessagePropsMessagePropsInfoRec, *DtbMessagePropsMessagePropsInfo;


extern DtbMessagePropsMessagePropsInfoRec dtb_message_props_message_props;

/*
 * Structure Clear Procedures: These set the fields to NULL
 */
int dtbMessagePropsMessagePropsInfo_clear(DtbMessagePropsMessagePropsInfo instance);

/*
 * Structure Initialization Procedures: These create the widgets
 */
int dtb_message_props_message_props_initialize(
    DtbMessagePropsMessagePropsInfo	instance,
    Widget	parent
);

/*
 * User Callbacks
 */
void setClassUndefined(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setClassNotice(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setClassRequest(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setClassOffer(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setAddressLast(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setAddressProcedure(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setAddressObject(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setAddressHandler(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setAddressOtype(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setScopeNone(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setScopeSession(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setScopeFile(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setScopeBoth(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setScopeFileInSession(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setOp(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSend(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSendOnExit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgAccept(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgReject(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgReply(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgFail(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgDestroy(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgDtAccept(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSubcontractManage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgClone(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgStatusNotice(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgGenAction(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgGenC(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setHandler(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setSession(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setFile(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setStatus(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgHelp(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgPattern(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgPrint(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void genPattern(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void genObserver(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionSet(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgFileSet(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgArgAdd(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgContextSet(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setArg(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setDISCARD(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setQUEUE(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setSTART(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void setQUEUESTART(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSetObject(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSetOtype(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSetHandlerPtype(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSetSenderPtype(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void chooseOp(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void addCallback(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void chooseHandler(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgSetStatusString(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);

/*
 * Connections
 */
void messageProps_msgCloseButton_CB1(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
#endif /* _MESSAGEPROPS_UI_H_ */
/*
 * CDE - Common Desktop Environment
 *
 * Copyright (c) 1993-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these libraries and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
 */
/* $XConsortium: closeBrace.h /main/3 1995/11/06 17:12:38 rswiston $ */
#ifdef	__cplusplus
}
#endif
