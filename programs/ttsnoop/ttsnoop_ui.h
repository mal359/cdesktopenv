/*
 * CDE - Common Desktop Environment
 *
 * Copyright (c) 1993-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these libraries and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
 */
/* $XConsortium: externC.h /main/3 1995/11/06 17:12:49 rswiston $ */
#ifdef	__cplusplus
extern "C" {
#endif
/*
 * File: ttsnoop_ui.h
 * Contains: Declarations of module objects, user create procedures,
 *           and callbacks.
 *
 * This file was generated by dtcodegen, from module ttsnoop
 *
 *    ** DO NOT MODIFY BY HAND - ALL MODIFICATIONS WILL BE LOST **
 */
#ifndef _TTSNOOP_UI_H_
#define _TTSNOOP_UI_H_

#include <stdlib.h>
#include <X11/Intrinsic.h>
#include "dtb_utils.h"

/*
 * User Interface Objects
 */
/*
 * Shared data structures
 */
typedef struct {
    Widget	Off_item;
    Widget	separator1_item;
    Widget	ttsession_item;
    Widget	libtt_item;
    Widget	separator2_item;
    Widget	Version_item;
} TtsnoopSnoopMenuItemsRec, *TtsnoopSnoopMenuItems;
typedef struct {
    Widget	Create_item;
    Widget	Create_Standard_item;
    Widget	Open_item;
    Widget	Receive_item;
    Widget	Destroy_item;
} TtsnoopMessageMenuItemsRec, *TtsnoopMessageMenuItems;
typedef struct {
    Widget	Create_item;
    Widget	Open_item;
    Widget	Destroy_item;
} TtsnoopPatternMenuItemsRec, *TtsnoopPatternMenuItems;
typedef struct {
    Widget	Join_item;
    Widget	Quit_item;
    Widget	separator1_item;
    Widget	Default_item;
    Widget	Set_Default_item;
    Widget	Unset_Default_item;
    Widget	separator5_item;
    Widget	Desktop_Join_item;
    Widget	Desktop_Quit_item;
    Widget	separator2_item;
    Widget	Saved_item;
    Widget	Modified_item;
    Widget	Reverted_item;
    Widget	Moved_item;
    Widget	Deleted_item;
    Widget	separator3_item;
    Widget	Get_Modified_item;
    Widget	Save_item;
    Widget	Revert_item;
    Widget	separator4_item;
    Widget	File_Netfile_item;
    Widget	Netfile_File_item;
} TtsnoopFileMenuItemsRec, *TtsnoopFileMenuItems;
typedef struct {
    Widget	Join_item;
    Widget	Quit_item;
    Widget	separator1_item;
    Widget	Default_item;
    Widget	Set_Default_item;
    Widget	separator2_item;
    Widget	Desktop_Join_item;
    Widget	Desktop_Quit_item;
} TtsnoopSessionMenuItemsRec, *TtsnoopSessionMenuItems;
typedef struct {
    Widget	Declare_item;
    Widget	Undeclare_item;
    Widget	separator1_item;
    Widget	Default_item;
    Widget	Set_Default_item;
    Widget	Exists_item;
    Widget	separator2_item;
    Widget	Media_Declare_item;
} TtsnoopPtypeMenuItemsRec, *TtsnoopPtypeMenuItems;
typedef struct {
    Widget	Session_Types_Load_item;
    Widget	Session_Types_Reload_item;
    Widget	List_item;
    Widget	Dump_item;
    Widget	TT_MSG_Actions_item;
} TtsnoopTypesMenuItemsRec, *TtsnoopTypesMenuItems;
typedef struct {
    Widget	Open_item;
    Widget	Close_item;
    Widget	separator3_item;
    Widget	Desktop_Open_item;
    Widget	Desktop_Close_item;
    Widget	separator4_item;
    Widget	Default_item;
    Widget	Set_Default_item;
    Widget	separator2_item;
    Widget	Suspend_item;
    Widget	Resume_item;
} TtsnoopProcidMenuItemsRec, *TtsnoopProcidMenuItems;
typedef struct {
    Widget	system_item;
    Widget	chdir_item;
    Widget	putenv_item;
    Widget	pause_item;
    Widget	exit_item;
} TtsnoopLibcMenuItemsRec, *TtsnoopLibcMenuItems;
typedef struct {
    Widget	On_Item_item;
    Widget	separator1_item;
    Widget	ttsnoop_1_item;
    Widget	tttrace_1_item;
    Widget	ttsession_1_item;
    Widget	tt_type_comp_1_item;
    Widget	rpc_ttdbserverd_1m_item;
    Widget	tttracefile_4_item;
    Widget	tt_c_5_item;
    Widget	tttk_5_item;
    Widget	alt_soft_sys_tooltalk_item;
} TtsnoopHelpMenuItemsRec, *TtsnoopHelpMenuItems;


typedef struct {
    Widget	Snoop_item;
    Widget	Message_item;
    Widget	Pattern_item;
    Widget	File_item;
    Widget	Session_item;
    Widget	Ptype_item;
    Widget	Types_item;
    Widget	Procid_item;
    Widget	libc_item;
    Widget	Help_item;
} TtsnoopMenubarItemsRec, *TtsnoopMenubarItems;
typedef struct
{
    Boolean	initialized;
    
    Widget	ttsnoopWin;	/* object "ttsnoopWin" */
    Widget	ttsnoopWin_mainwin;
    Widget	ttsnoopWin_form;
    
    Widget	menubar;	/* object "menubar" */
    TtsnoopMenubarItemsRec	menubar_items;
    
    Widget	ttsnoopWin_footer;
    
    Widget	menubar_Snoop_item_Snoop_menu;	/* object "Snoop_menu" */
    TtsnoopSnoopMenuItemsRec	menubar_Snoop_item_Snoop_menu_items;
    
    Widget	menubar_Message_item_Message_menu;	/* object "Message_menu" */
    TtsnoopMessageMenuItemsRec	menubar_Message_item_Message_menu_items;
    
    Widget	menubar_Pattern_item_Pattern_menu;	/* object "Pattern_menu" */
    TtsnoopPatternMenuItemsRec	menubar_Pattern_item_Pattern_menu_items;
    
    Widget	menubar_File_item_File_menu;	/* object "File_menu" */
    TtsnoopFileMenuItemsRec	menubar_File_item_File_menu_items;
    
    Widget	menubar_Session_item_Session_menu;	/* object "Session_menu" */
    TtsnoopSessionMenuItemsRec	menubar_Session_item_Session_menu_items;
    
    Widget	menubar_Ptype_item_Ptype_menu;	/* object "Ptype_menu" */
    TtsnoopPtypeMenuItemsRec	menubar_Ptype_item_Ptype_menu_items;
    
    Widget	menubar_Types_item_Types_menu;	/* object "Types_menu" */
    TtsnoopTypesMenuItemsRec	menubar_Types_item_Types_menu_items;
    
    Widget	menubar_Procid_item_Procid_menu;	/* object "Procid_menu" */
    TtsnoopProcidMenuItemsRec	menubar_Procid_item_Procid_menu_items;
    
    Widget	menubar_libc_item_libc_menu;	/* object "libc_menu" */
    TtsnoopLibcMenuItemsRec	menubar_libc_item_libc_menu_items;
    
    Widget	menubar_Help_item_Help_menu;	/* object "Help_menu" */
    TtsnoopHelpMenuItemsRec	menubar_Help_item_Help_menu_items;
    
    Widget	ttsnoopPane_scrolledwin;	/* object "ttsnoopPane" */
    Widget	ttsnoopPane;
    Widget	ttsnoopPane_vscrollbar;
    
    Widget	ttsnoopWin_label;
} DtbTtsnoopTtsnoopWinInfoRec, *DtbTtsnoopTtsnoopWinInfo;


extern DtbTtsnoopTtsnoopWinInfoRec dtb_ttsnoop_ttsnoop_win;

/*
 * Structure Clear Procedures: These set the fields to NULL
 */
int dtbTtsnoopTtsnoopWinInfo_clear(DtbTtsnoopTtsnoopWinInfo instance);

/*
 * Structure Initialization Procedures: These create the widgets
 */
int dtb_ttsnoop_ttsnoop_win_initialize(
    DtbTtsnoopTtsnoopWinInfo	instance,
    Widget	parent
);

/*
 * User Callbacks
 */
void fork_tttrace(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void turnOnTracing(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void createMessage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void receiveMessage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void openMessage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void destroyMessage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_ttsnoop(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_tttrace(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_ttsession(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_tt_type_comp(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_dbserver(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_tttracefile(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_tt_c(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void help_tttk(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void helpUsenet(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionTypesLoad(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionTypesReload(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void dumpSource(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void typesEnumerate(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void createPattern(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void openPattern(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void destroyPattern(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void ptypeDeclare(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void mediaPtypeDeclare(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void ptypeUnDeclare(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void ptypeSetDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void ptypeExists(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void libcSystem(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void libcChdir(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void libcPutenv(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void libcPause(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void libcExit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void msgActions(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionJoin(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void dtSessionJoin(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionQuit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionSetDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileJoin(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileDesktopJoin(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileQuit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileSetDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileUnSetDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileSaved(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileModified(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileReverted(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileGetModified(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileSave(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileRevert(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileNetfile(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void netfileFile(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileDesktopQuit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileMoved(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileDeleted(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void dtSessionQuit(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidOpen(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidClose(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidSetDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidSuspend(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidResume(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidDtOpen(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidDtClose(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void procidDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void ptypeDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void sessionDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void fileDefault(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void toggleSnooping(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void printVersion(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
void createStandardMessage(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);

/*
 * Connections
 */
void ttsnoop_Help_menu_On_Item_item_CB1(
    Widget	widget,
    XtPointer	clientData,
    XtPointer	callData
);
#endif /* _TTSNOOP_UI_H_ */
/*
 * CDE - Common Desktop Environment
 *
 * Copyright (c) 1993-2012, The Open Group. All rights reserved.
 *
 * These libraries and programs are free software; you can
 * redistribute them and/or modify them under the terms of the GNU
 * Lesser General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option)
 * any later version.
 *
 * These libraries and programs are distributed in the hope that
 * they will be useful, but WITHOUT ANY WARRANTY; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with these libraries and programs; if not, write
 * to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
 * Floor, Boston, MA 02110-1301 USA
 */
/* $XConsortium: closeBrace.h /main/3 1995/11/06 17:12:38 rswiston $ */
#ifdef	__cplusplus
}
#endif
